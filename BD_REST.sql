-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cache
(
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.cache_locks
(
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    owner character varying(255) COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_locks_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.categorias
(
    id_categoria serial NOT NULL,
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    imagen_url character varying(255) COLLATE pg_catalog."default",
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    fecha_creacion_auditoria timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT categorias_pkey PRIMARY KEY (id_categoria)
);

CREATE TABLE IF NOT EXISTS public.clientes
(
    id_cliente serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(15) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    fecha_estado_auditoria timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT clientes_pkey PRIMARY KEY (id_cliente)
);

CREATE TABLE IF NOT EXISTS public.detalleorden
(
    id_detalle serial NOT NULL,
    id_orden integer,
    id_platillo integer,
    cantidad integer NOT NULL,
    precio_unitario numeric(10, 2) NOT NULL,
    subtotal numeric(10, 2) GENERATED ALWAYS AS (((cantidad)::numeric * precio_unitario)) STORED,
    CONSTRAINT detalleorden_pkey PRIMARY KEY (id_detalle)
);

CREATE TABLE IF NOT EXISTS public.failed_jobs
(
    id bigserial NOT NULL,
    uuid character varying(255) COLLATE pg_catalog."default" NOT NULL,
    connection text COLLATE pg_catalog."default" NOT NULL,
    queue text COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    exception text COLLATE pg_catalog."default" NOT NULL,
    failed_at timestamp(0) without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT failed_jobs_pkey PRIMARY KEY (id),
    CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid)
);

CREATE TABLE IF NOT EXISTS public.job_batches
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    total_jobs integer NOT NULL,
    pending_jobs integer NOT NULL,
    failed_jobs integer NOT NULL,
    failed_job_ids text COLLATE pg_catalog."default" NOT NULL,
    options text COLLATE pg_catalog."default",
    cancelled_at integer,
    created_at integer NOT NULL,
    finished_at integer,
    CONSTRAINT job_batches_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.jobs
(
    id bigserial NOT NULL,
    queue character varying(255) COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    attempts smallint NOT NULL,
    reserved_at integer,
    available_at integer NOT NULL,
    created_at integer NOT NULL,
    CONSTRAINT jobs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.mesas
(
    id_mesa serial NOT NULL,
    numero integer NOT NULL,
    capacidad integer NOT NULL,
    ubicacion character varying(100) COLLATE pg_catalog."default",
    disponibilidad boolean DEFAULT true,
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    fecha_creacion_auditoria timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT mesas_pkey PRIMARY KEY (id_mesa)
);

CREATE TABLE IF NOT EXISTS public.migrations
(
    id serial NOT NULL,
    migration character varying(255) COLLATE pg_catalog."default" NOT NULL,
    batch integer NOT NULL,
    CONSTRAINT migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ordenes
(
    id_orden serial NOT NULL,
    id_mesa integer,
    fecha_orden timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    total numeric(10, 2),
    estado estado_orden DEFAULT 'Abierta'::estado_orden,
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    fecha_creacion_auditoria timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT ordenes_pkey PRIMARY KEY (id_orden)
);

CREATE TABLE IF NOT EXISTS public.pagos
(
    id_pago serial NOT NULL,
    id_orden integer,
    fecha_pago timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    monto numeric(10, 2),
    metodo_pago metodo_pago DEFAULT 'Efectivo'::metodo_pago,
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    CONSTRAINT pagos_pkey PRIMARY KEY (id_pago)
);

CREATE TABLE IF NOT EXISTS public.password_reset_tokens
(
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.platillos
(
    id_platillo serial NOT NULL,
    nombre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    descripcion text COLLATE pg_catalog."default",
    precio numeric(10, 2) NOT NULL,
    id_categoria integer NOT NULL,
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    fecha_creacion_auditoria timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT platillos_pkey PRIMARY KEY (id_platillo)
);

CREATE TABLE IF NOT EXISTS public.reservas
(
    id_reserva serial NOT NULL,
    id_cliente integer NOT NULL,
    id_mesa integer NOT NULL,
    fecha_reserva date NOT NULL,
    hora_reserva time without time zone NOT NULL,
    cantidad_personas integer NOT NULL,
    estado estado_reserva DEFAULT 'Pendiente'::estado_reserva,
    CONSTRAINT reservas_pkey PRIMARY KEY (id_reserva)
);

CREATE TABLE IF NOT EXISTS public.sessions
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id bigint,
    ip_address character varying(45) COLLATE pg_catalog."default",
    user_agent text COLLATE pg_catalog."default",
    payload text COLLATE pg_catalog."default" NOT NULL,
    last_activity integer NOT NULL,
    CONSTRAINT sessions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email_verified_at timestamp(0) without time zone,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    remember_token character varying(100) COLLATE pg_catalog."default",
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_unique UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario serial NOT NULL,
    nombre character varying(250) COLLATE pg_catalog."default" NOT NULL,
    pass_user character varying(20) COLLATE pg_catalog."default" NOT NULL,
    correo character varying(250) COLLATE pg_catalog."default" NOT NULL,
    rol character varying(20) COLLATE pg_catalog."default",
    estado_auditoria character(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '1'::bpchar,
    fecha_creacion_auditoria timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario)
);

ALTER TABLE IF EXISTS public.detalleorden
    ADD CONSTRAINT fk_orden FOREIGN KEY (id_orden)
    REFERENCES public.ordenes (id_orden) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.detalleorden
    ADD CONSTRAINT fk_platillo FOREIGN KEY (id_platillo)
    REFERENCES public.platillos (id_platillo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ordenes
    ADD CONSTRAINT fk_mesa_orden FOREIGN KEY (id_mesa)
    REFERENCES public.mesas (id_mesa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pagos
    ADD CONSTRAINT fk_pago_orden FOREIGN KEY (id_orden)
    REFERENCES public.ordenes (id_orden) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.platillos
    ADD CONSTRAINT fk_categoria FOREIGN KEY (id_categoria)
    REFERENCES public.categorias (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservas
    ADD CONSTRAINT fk_cliente FOREIGN KEY (id_cliente)
    REFERENCES public.clientes (id_cliente) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservas
    ADD CONSTRAINT fk_mesa FOREIGN KEY (id_mesa)
    REFERENCES public.mesas (id_mesa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;